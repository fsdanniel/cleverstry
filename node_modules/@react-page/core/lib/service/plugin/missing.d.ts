import { ContentPluginProps, LayoutPluginProps } from './classes';
export declare const contentMissing: ({ name, version, }: Pick<Pick<ContentPluginProps<any>, "allowInlineNeighbours" | "isInlineable" | "Component" | "name" | "text" | "description" | "lang" | "version" | "IconComponent" | "hideInMenu" | "serialize" | "unserialize" | "handleRemoveHotKey" | "handleFocusNextHotKey" | "handleFocusPreviousHotKey" | "handleFocus" | "handleBlur" | "reducer" | "migrations" | "createInitialState">, "name" | "version">) => Pick<ContentPluginProps<any>, "allowInlineNeighbours" | "isInlineable" | "Component" | "name" | "text" | "description" | "lang" | "version" | "IconComponent" | "hideInMenu" | "serialize" | "unserialize" | "handleRemoveHotKey" | "handleFocusNextHotKey" | "handleFocusPreviousHotKey" | "handleFocus" | "handleBlur" | "reducer" | "migrations" | "createInitialState">;
export declare const layoutMissing: ({ name, version, }: Pick<Pick<LayoutPluginProps<any>, "Component" | "name" | "text" | "description" | "lang" | "version" | "IconComponent" | "hideInMenu" | "serialize" | "unserialize" | "handleRemoveHotKey" | "handleFocusNextHotKey" | "handleFocusPreviousHotKey" | "handleFocus" | "handleBlur" | "reducer" | "migrations" | "createInitialState" | "createInitialChildren">, "name" | "version">) => Pick<LayoutPluginProps<any>, "Component" | "name" | "text" | "description" | "lang" | "version" | "IconComponent" | "hideInMenu" | "serialize" | "unserialize" | "handleRemoveHotKey" | "handleFocusNextHotKey" | "handleFocusPreviousHotKey" | "handleFocus" | "handleBlur" | "reducer" | "migrations" | "createInitialState" | "createInitialChildren">;
//# sourceMappingURL=missing.d.ts.map